# =============================================================================
# NGINX SECURITY-HARDENED CONFIGURATION FOR PRODUCTION
# =============================================================================
# High-security reverse proxy configuration con enterprise security features
# File: nginx/nginx.security.conf
# =============================================================================

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Security: Limite worker connections
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic Configuration
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Security: Hide Nginx version
    server_tokens off;
    
    # Security: Limite request size
    client_max_body_size 10m;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    
    # Security: Timeouts
    client_body_timeout 12s;
    client_header_timeout 12s;
    send_timeout 10s;
    keepalive_timeout 15s;
    
    # Security: Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=grafana:10m rate=5r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    
    # Logging Configuration
    log_format security_log '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" '
                           '$request_time $upstream_response_time '
                           '$upstream_addr $upstream_status';
    
    access_log /var/log/nginx/access.log security_log;
    
    # Security Headers Map
    map $sent_http_content_type $security_headers {
        ~*text/html "nosniff";
        default     "nosniff";
    }
    
    # Gzip Configuration
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml;
    
    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # Security: Block common attacks
    map $request_uri $malicious {
        default 0;
        ~*\.(asp|aspx|php|jsp)$ 1;
        ~*(/\.git|/\.svn|/\.hg) 1;
        ~*(select|union|insert|drop|delete|update|--|;) 1;
        ~*(<script|javascript:|vbscript:|onload|onerror) 1;
    }
    
    # Rate limiting per IP
    limit_req_status 429;
    limit_conn_status 429;
    
    # Main API Server Block
    server {
        listen 443 ssl http2;
        server_name api.piazzati.yourdomain.com;
        
        # SSL Certificate Configuration
        ssl_certificate /etc/nginx/ssl/piazzati-chain.pem;
        ssl_certificate_key /etc/nginx/ssl/piazzati.key;
        ssl_trusted_certificate /etc/nginx/ssl/piazzati-chain.pem;
        
        # Security Headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self'; frame-ancestors 'none';" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(), usb=(), interest-cohort=()" always;
        
        # Security: Block malicious requests
        if ($malicious) {
            return 444;
        }
        
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        limit_conn conn_limit_per_ip 20;
        
        # Health check endpoint (no rate limiting)
        location /health {
            access_log off;
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # API endpoints
        location /api/ {
            # Rate limiting for API
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # Proxy timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            proxy_buffering off;
        }
        
        # Authentication endpoints (stricter rate limiting)
        location ~ ^/api/(auth|login|register) {
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
        }
        
        # Metrics endpoint (internal only)
        location /metrics {
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            allow 10.0.0.0/8;
            deny all;
            
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Block sensitive paths
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
            return 444;
        }
        
        # Default location
        location / {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
        }
    }
    
    # Grafana Server Block
    server {
        listen 3000 ssl http2;
        server_name grafana.piazzati.yourdomain.com;
        
        # SSL Certificate Configuration
        ssl_certificate /etc/nginx/ssl/piazzati-chain.pem;
        ssl_certificate_key /etc/nginx/ssl/piazzati.key;
        ssl_trusted_certificate /etc/nginx/ssl/piazzati-chain.pem;
        
        # Security Headers (same as API)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'none';" always;
        
        # Security: Block malicious requests
        if ($malicious) {
            return 444;
        }
        
        # Rate limiting for Grafana
        limit_req zone=grafana burst=10 nodelay;
        limit_conn conn_limit_per_ip 10;
        
        location / {
            proxy_pass http://grafana:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
            
            # WebSocket support for Grafana real-time updates
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Proxy timeouts (longer for Grafana)
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }
    
    # Main Website Server Block  
    server {
        listen 443 ssl http2 default_server;
        server_name piazzati.yourdomain.com www.piazzati.yourdomain.com;
        
        # SSL Certificate Configuration
        ssl_certificate /etc/nginx/ssl/piazzati-chain.pem;
        ssl_certificate_key /etc/nginx/ssl/piazzati.key;
        ssl_trusted_certificate /etc/nginx/ssl/piazzati-chain.pem;
        
        # Security Headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' https://api.piazzati.yourdomain.com; frame-ancestors 'none';" always;
        
        # Security: Block malicious requests
        if ($malicious) {
            return 444;
        }
        
        # Rate limiting
        limit_req zone=api burst=30 nodelay;
        limit_conn conn_limit_per_ip 30;
        
        # Redirect www to non-www
        if ($host = www.piazzati.yourdomain.com) {
            return 301 https://piazzati.yourdomain.com$request_uri;
        }
        
        location / {
            # Placeholder for frontend application
            # Replace with actual frontend service when available
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    # HTTP to HTTPS Redirect
    server {
        listen 80;
        server_name piazzati.yourdomain.com www.piazzati.yourdomain.com api.piazzati.yourdomain.com grafana.piazzati.yourdomain.com;
        
        # Security: Block malicious requests even on HTTP
        if ($malicious) {
            return 444;
        }
        
        # Redirect all HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }
    
    # Default server (catch-all for unknown domains)
    server {
        listen 80 default_server;
        listen 443 ssl default_server;
        server_name _;
        
        # Use dummy SSL certificate for unknown domains
        ssl_certificate /etc/nginx/ssl/piazzati.crt;
        ssl_certificate_key /etc/nginx/ssl/piazzati.key;
        
        # Return 444 (connection closed) for unknown domains
        return 444;
    }
}

# Stream configuration for additional security
stream {
    # Rate limiting for non-HTTP traffic
    map $binary_remote_addr $limit_stream {
        default $binary_remote_addr;
    }
    
    limit_conn_zone $limit_stream zone=stream_limit:10m;
    
    # Log format for stream
    log_format stream_log '$remote_addr [$time_local] $protocol $bytes_sent $bytes_received $session_time';
}

# Security notes:
# 1. This configuration blocks common attack patterns
# 2. Rate limiting is implemented per endpoint type
# 3. Security headers are enforced on all responses
# 4. SSL/TLS is properly configured with modern ciphers
# 5. OCSP stapling is enabled for better SSL performance
# 6. All HTTP traffic is redirected to HTTPS
# 7. Unknown domains are blocked with 444 response
# 8. Internal endpoints (metrics) are restricted to private IPs
# 9. WebSocket support is available for Grafana
# 10. Request/response timeouts are configured for security